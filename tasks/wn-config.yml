---
# tasks file for cms_config
- name: install cvmfs repo
  apt: deb=http://ecsft.cern.ch/dist/cvmfs/cvmfs-release/cvmfs-release-latest_all.deb 
  tags: cms_config

- name: Install cvmfs packages
  apt: name={{item}} state=present update_cache=yes
  with_items:
       - cvmfs
       - cvmfs-config-default
  tags: cms_config

- name: create/update file /etc/cvmfs/default.local
  blockinfile:
    dest: /etc/cvmfs/default.local
    create: yes
    content: |
      CVMFS_HTTP_PROXY={{cms_config_cvmfs_http_proxy}}
      CVMFS_REPOSITORIES={{cms_config_cvmfs_repositories}}
  tags: cms_config

- name: create necessary dirs
  file:  path={{item}} state=directory mode=0755
  with_items:
    - /etc/cvmfs/SITECONF
  tags: cms_config

- name: create necessary dirs
  file:  path={{item}} state=directory mode=0755
  with_items:
    - /etc/cvmfs/SITECONF/PhEDEx
  tags: cms_config

- name: create necessary dirs
  file:  path={{item}} state=directory mode=0755
  with_items:
    - /etc/cvmfs/SITECONF/JobConfig
  tags: cms_config

- name: set CMS_LOCAL_SITE variable
  lineinfile: dest=/etc/cvmfs/config.d/cms.cern.ch.conf create=yes line="export CMS_LOCAL_SITE=/etc/cvmfs/SITECONF"
  tags: cms_config

- name: Enable user_allow_other in fuse.conf
  lineinfile: dest=/etc/fuse.conf line="user_allow_other" state=present
  tags: cms_config

- name: wait for cms squid to be up and running (ansible > 2.1.0.0)
  wait_for: 
     host: "{{cms_config_mysquid_host}}" 
     port: "{{cms_config_mysquid_port}}"
     delay: 20
     timeout: 600
  when: ansible_version > "2.1.0.0"
  tags:
    - cms_config

- name: wait for cms squid to be up and running using nc 
  command: nc -z {{cms_config_mysquid_host}} {{cms_config_mysquid_port}}
  register: result
  until: result.rc == 0
  delay: 20
  retries: 40
  when: ansible_version <= "2.1.0.0"
  tags:
    - cms_apps

- name: Stop autofs
  service: name=autofs state=stopped
  tags: cms_config

- name: Creates CVMFS mountpoint for cms
  file: path=/cvmfs/cms.cern.ch state=directory owner=cvmfs group=cvmfs recurse=yes
  tags: cms_config

- name: Creates CVMFS mountpoint for singularity
  file: path=/cvmfs/singularity.opensciencegrid.org state=directory owner=cvmfs group=cvmfs recurse=yes
  tags: cms_config

- name: Creates CVMFS mountpoint for singularity oasis
  file: path=/cvmfs/oasis.opensciencegrid.org state=directory owner=cvmfs group=cvmfs recurse=yes
  tags: cms_config

- name: mount CVMFS cms
  command: mount -t cvmfs cms.cern.ch /cvmfs/cms.cern.ch/
  register: result
  until: result | success
  retries: 10
  delay: 10
  tags: cms_config

- name: Remove locate cronjob
  file:
    path: /etc/cron.daily/mlocate
    state: absent

- name: mount CVMFS singularity
  command: mount -t cvmfs singularity.opensciencegrid.org /cvmfs/singularity.opensciencegrid.org
  register: result
  until: result | success
  retries: 10
  delay: 10
  tags: cms_config

- name: mount CVMFS singularity oasis
  command: mount -t cvmfs oasis.opensciencegrid.org /cvmfs/oasis.opensciencegrid.org
  register: result
  until: result | success
  retries: 10
  delay: 10
  tags: cms_config

- name: Set wide-system environment vars
  blockinfile:
    dest: /etc/environment
    create: yes
    content: |
      CMS_LOCAL_SITE={{cms_config_cms_local_site}}
      MYSQUID={{cms_config_mysquid}}
  tags: cms_config

- name: inserting custom site-local-config.xml
  blockinfile:
    dest: /etc/cvmfs/SITECONF/JobConfig/site-local-config.xml
    create: yes
    marker: "<!-- {mark} Creating local TFC -->"
    block: |
      <site-local-config>
      <site name="{{cms_config_cms_local_site}}">
      <event-data>
      <catalog url="trivialcatalog_file:/cvmfs/cms.cern.ch/SITECONF/local/PhEDEx/storage.xml?protocol={{cms_input_protocol}}"/>
      </event-data>
      <calib-data>
      <frontier-connect>
      <load balance="proxies"/>
      <proxy url="http://{{cms_config_mysquid_host}}:{{cms_config_mysquid_port}}"/>
      <backupproxy url="http://cmsbpfrontier.cern.ch:3128"/>
      <backupproxy url="http://cmsbproxy.fnal.gov:3128"/>
      <server url="http://cmsfrontier.cern.ch:8000/FrontierInt"/>
      <server url="http://cmsfrontier1.cern.ch:8000/FrontierInt"/>
      <server url="http://cmsfrontier2.cern.ch:8000/FrontierInt"/>
      <server url="http://cmsfrontier3.cern.ch:8000/FrontierInt"/>
      </frontier-connect>
      </calib-data>
      <local-stage-out>
        <command value="{{cms_config_stageoutcommand}}"/> 
        <catalog url="trivialcatalog_file:/cvmfs/cms.cern.ch/SITECONF/{{cms_config_stageoutsite}}/PhEDEx/storage.xml?protocol={{cms_config_stageoutprotocol}}"/>
        <se-name value="srm-eoscms.cern.ch"/>
        <phedex-node value="{{cms_config_phedexnode}}"/>
      </local-stage-out>
      <fallback-stage-out> 
        <se-name value="t2-srm-02.lnl.infn.it"/> 
        <phedex-node value="{{cms_config_fallback_phedexnode}}"/> 
        <lfn-prefix value="{{cms_config_fallback_lfn_prefix}}"/> 
        <command value="{{cms_config_fallback_command}}"/> 
      </fallback-stage-out> 
      </site>
      </site-local-config>
  tags: cms_config

- name: inserting custom storage.xml
  blockinfile:
    dest: /etc/cvmfs/SITECONF/PhEDEx/storage.xml
    create: yes
    marker: "<!-- {mark} Creating local storage.xml -->"
    block: |
      <storage-mapping>
      <!-- AAA xrootd read rule -->
      <lfn-to-pfn protocol="xrootd"
              destination-match=".*"
              path-match="/+store/(.*)"
              result="root://{{cms_xrd_readserver}}//store/$1"/>

      <!-- Onedata read rule -->
      <lfn-to-pfn protocol="onedata"
              destination-match=".*"
              path-match="/(.*)" 
              result="/mnt/onedata/{{cms_input_path}}/$1"/>  

      </storage-mapping>
  tags: cms_config

- name: Get metricbeat
  get_url:
    url: https://artifacts.elastic.co/downloads/beats/metricbeat/metricbeat-5.2.2-amd64.deb
    dest: /tmp/metricbeat.deb
  tags: metric_install

- name: Install metricbeat
  command: dpkg -i /tmp/metricbeat.deb
  tags: metric_install

- name: Get metricbeat config
  get_url:
    url: https://gist.githubusercontent.com/dciangot/69b61ff2bb1327b6485af88ac06c71ff/raw/
    dest: /etc/metricbeat/metricbeat.yml
    force: yes
  tags: metric_install

- name: Configure elasticsearch endpoint
  replace:
    dest: /etc/metricbeat/metricbeat.yml
    regexp: '(hosts: )\[\]$'
    replace: '\1 ["{{monitordb_ip}}"]'
    backup: yes
  tags: metric_install

- name: Set metric name
  replace:
    dest: /etc/metricbeat/metricbeat.yml
    regexp: '.*(name:)$'
    replace: '\1 {{ cms_config_cms_local_site }}'
    backup: yes
  tags: metric_install

- name: Set elasticsearch password
  replace:
    dest: /etc/metricbeat/metricbeat.yml
    regexp: '(password:)$'
    replace: '\1 "{{ cms_config_elastic_secret }}"'
    backup: yes
  tags: metric_install

- name: Start metricbeat
  service:
    name: metricbeat
    state: started
  tags: metric_start
